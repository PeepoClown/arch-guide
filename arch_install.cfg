Part 1 - "before grub"

Check network interfaces : {
	show interfaces stat 			: ip link show
	if interface is down, up it's 	: ip link set %interface name% up
	get an ip / connect to wi-fi	: dhcpcd / wifi-menu
	check connection				: ping -c 3 google.com
	check your ip 					: wget -O - -q ifconfig.me/ip && echo ''
}
Disk partrition : {
					fdisk -l
					cfdisk : {
							Root : 80G linux filesystem
							EFI : 100M EFI system
							Swap : 16G linux swap
							Home : Last space linux filesystem
					 	 }
					 mkfs.ext4 /dev/sda1 -L "%root_label%"
					 mkfs.ext4 /dev/sda4 -L "%home_label%"
					 mkfs.vfat /dev/sda2
					 mkswap /dev/sda3 

					 swapon /dev/sda3
					 mount /dev/sda1 /mnt
					 mkdir /mnt/{boot,home}
					 mkdir /mnt/boot/efi
					 mount /dev/sda2 /mnt/boot/efi
					 mount /dev/sda4 /mnt/home
}
Instalation : {
					//set in /etc/pacman.d/mirrorList yandex server as mirror(put in head of file)
					pacstrap -i /mnt base linux-lts linux-firmware base-devel
					genfstab -U /mnt >> /mnt/etc/fstab
}
Editing : {
					arch-chroot /mnt
					set timezone :	{
									ln -sf /usr/share/zoneinfo/Europe/Moscow /etc/localtime
									hwclock --systohc
					}
					pacman -S vim //editor
					get RU keys :	{
									//uncomment ru & en locale in /etc/locale.gen
									locale-gen
									loadkeys ru
									setfont cyr-sun16
					}
					add host :	{
									vim /etc/hostname //enter your hostname
									vim etc/hosts //add following strings :
									127.0.0.1	localhost
									::1			localhost
									127.0.1.1	%hostname%.localdomain	%hostname%
					}
					add user / set password : 	{
									useradd -m -g users -G wheel -s /bin/bash %username%
									passwd %username%
									passwd //this for root
					}
					pacman -S dhcpcd / wifimenu , networkmanager
					install grub and configue : {
									pacman -S grub os-prober efibootmgr
									grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=grub
									grub-mkconfig -o /boot/grub/grub.cfg
					}
					enable networkmgr :	 systemctl enable NetworkManager
					exit
					reboot
}
=======================================================================================

Part 2 - "befor DE"
Configuration of system : {
					login as root
					check ping
					vim /etc/sudoers - edit : {
						uncomment # %wheel ALL=(ALL) ALL
						add - Defaults pwfeedback for stars at passwd
					}
					uncomment multilib at /etc/pacman.conf
}
Install de : {
					pacman -S pulseaudio pulseaudio-alsa xorg xorg-xinit xorg-server
					pacman -S sddm plasma
					pacman -S konsole dolphin firefox
					systemctl enable sddm
					reboot
}
======================================================================================

Part 3 - "kde and system configuration"
install AUR : {
					sudo pacman -S --needed base-devel git wget yajl
					git clone https://aur.archlinux.org/package-query.git pq && cd ./pq
					makepkg -si
					cd ..
					git clone https://aur.archlinux.org/yaourt.git yaourt && cd ./yaourt
					makepkg -si
					cd ..
					rm -rf yaourt/ pq/
					yaourt -S pamac-aur
}
install nvidia driver if needed (we already have open source driver xf86-video-nouveau) : {
					sudo pacman -S nvidia-lts nvidia-settings
					sudo nvidia-xconfig // auto-detect and create (or edit, if already present) the /etc/X11/xorg.conf configuration
					// if is needed configure videodriver by sudo nvidia-settings
}
themes : {
					global theme : Aritim-Dark
					plasma style : Aritim-Dark-Flat-Solid
					application style : breeze
					windows decoration : sierra brezze (non default in search)
					colors : Aritim-Dark | Gently
					fonts : Noto
					icons : ePapirus
					cursor : Breeze-Light
}
sudo pacman -S latte // customize latte dock
apps : {
					Atom, Audacious, BleachBeat, Chromium, Discord,
					Filelight, GParted, Gwenview, Gedit, Htop, Kompare,
					KolourPaint, LibreOffice, OBS, Okular, QtCreator and others,
					QBittorent, Screenshot, Slack, Spotify(pamac download), Steam,
					System Profiler, Telegram, VLC, VSCode, Xarchiver, Zoom.
}
//customize shell(zsh)
